{"version":3,"sources":["pages/main.js","pages/login.js","App.js","index.js"],"names":["Main","useState","amount","setAmount","walletAccount","setWalletAccount","setIsConnected","handleConnectWallet","a","console","log","window","ethereum","request","method","accounts","account","useEffect","controls","className","id","onClick","Login","addresses","item","find","address","location","pathname","map","user","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.191c31a4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport Web3 from \"web3\"\r\nimport { FullPage } from 'react-full-page'\r\nimport { contractAbi, contractAddress } from '../config'\r\n\r\nimport addresses from \"../whitelist.json\"\r\n\r\nimport './App.css'\r\nimport { AccountTree } from '@material-ui/icons'\r\n\r\nconst Main = () => {\r\n  const [ amount, setAmount ] = useState(1);\r\n  const [chainId, setChainId] = useState(null);\r\n  const [method, setMethod] = useState(null);\r\n  const [account, setAccount] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [totalSupply, setTotalSupply] = useState(0);\r\n  const [maxSupply, setMaxSupply] = useState(0);\r\n  const [price, setPrice] = useState(0);\r\n  const [displayPrice, setDisplayPrice] = useState(0);\r\n  const [balance, setBalance] = useState(0);\r\n  const [tokens, setTokens] = useState([]);\r\n  const [ walletAccount, setWalletAccount ] = useState('')\r\n  const [ isConnected, setIsConnected ] = useState(false)\r\n  let [mintNum, setMintNum] = useState(1);\r\n  const api = \"https://supbirds.com/meta/\";\r\n\r\n  const handleConnectWallet = async () => {\r\n\r\n    console.log('Connecting MetaMask...')\r\n\r\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' })\r\n    const account = accounts[0]\r\n    \r\n    console.log('Account: ', account)\r\n    setWalletAccount(account)\r\n    setIsConnected(true)\r\n  }\r\n\r\n  const increase = () => {\r\n    if(amount < 25 ) {\r\n      setAmount(amount + 1)\r\n    }    \r\n  }\r\n   const decrease = () => {\r\n    if(amount > 1 ) {\r\n      setAmount(amount - 1)\r\n    }    \r\n  }\r\n\r\n  useEffect(async () => {\r\n    handleConnectWallet();\r\n    console.log(walletAccount);\r\n  }, []);\r\n\r\n  return (\r\n    <FullPage controls={false}>\r\n      <div className=\"main-component\">\r\n        <header className=\"header-component\">\r\n          3&#176;12'43.2\r\n        </header>\r\n        <div className=\"login-content\">\r\n          <div>Welcome { walletAccount }</div><br></br>\r\n          <div>You own 0/25 DAOCode NFTs</div><br></br>\r\n          <div>Redeem 0 new DAOCode NFTs</div>\r\n          <div>\r\n            <button className='redeem-button' id=\"redeemButton\">REDEEM</button>\r\n          </div><br></br>\r\n          <div>Invitation code:</div>\r\n          <div>Mint 1 DAOcode NFT to</div>\r\n          <div>get your invitation code</div>\r\n            <br></br>\r\n          <div>Each invite that mint -</div>\r\n          <div>Redeem Free DAOcode NFT</div>\r\n          <br></br>\r\n          <div>Mint DAOcode NFT</div>\r\n          <div className=\"payment-count\">\r\n            <div className=\"btn-group\">\r\n                <div>\r\n                    <button onClick={()=> decrease()}>-</button>\r\n                </div>\r\n                <div>\r\n                    {amount}\r\n                </div>\r\n                <div>\r\n                    <button onClick={()=> increase()}>+</button>\r\n                </div>\r\n            </div>\r\n          </div>\r\n          <div>0.1 eth</div>\r\n          <div>\r\n            <button className='enter-button'>MINT</button>\r\n          </div>\r\n          <br></br>\r\n\r\n        </div>\r\n      </div>\r\n    </FullPage>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport Web3 from \"web3\"\r\nimport { FullPage } from 'react-full-page'\r\nimport { contractAbi, contractAddress } from '../config'\r\n\r\nimport addresses from \"../whitelist.json\"\r\n\r\nimport './App.css'\r\n\r\nconst Login = () => {\r\n\r\n  const [chainId, setChainId] = useState(null);\r\n  const [method, setMethod] = useState(null);\r\n  const [account, setAccount] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [totalSupply, setTotalSupply] = useState(0);\r\n  const [maxSupply, setMaxSupply] = useState(0);\r\n  const [price, setPrice] = useState(0);\r\n  const [displayPrice, setDisplayPrice] = useState(0);\r\n  const [balance, setBalance] = useState(0);\r\n  const [tokens, setTokens] = useState([]);\r\n  const [ walletAccount, setWalletAccount ] = useState('')\r\n  const [ isConnected, setIsConnected ] = useState(false)\r\n  let [mintNum, setMintNum] = useState(1);\r\n  const api = \"https://supbirds.com/meta/\";\r\n\r\n  const handleConnectWallet = async () => {\r\n\r\n    console.log('Connecting MetaMask...')\r\n\r\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' })\r\n    const account = accounts[0]\r\n    \r\n    console.log('Account: ', account)\r\n    setWalletAccount(account)\r\n    setIsConnected(true)\r\n    console.log(addresses)\r\n    let item = addresses.find(a => a.address == account);\r\n    if (item) {\r\n        console.log(item.id);\r\n        window.location.pathname = \"./main\"\r\n    }\r\n  }\r\n  useEffect(async () => {\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <FullPage controls={false}>\r\n      <div className=\"main-component\">\r\n        <header className=\"header-component\">\r\n          5&#176;12'39.6\r\n        </header>\r\n        <div className=\"login-content\">\r\n          <div>You must own a DAOCode NFT</div><br></br>\r\n          <div>Connect your wallet to log in</div><br></br>\r\n          <div>\r\n            <button className='connect-button' id=\"connectButton\" onClick={() => handleConnectWallet()}>CONNECT</button>\r\n          </div><br></br>\r\n          <div>Or enter your invitation code</div>\r\n          <div>\r\n            <input className='input-invitecode'></input>\r\n          </div><br></br>\r\n          <div>\r\n            <button className='enter-button'>ENTER</button>\r\n          </div>\r\n          <br></br>\r\n          <div>\r\n            -WhiteList-<br></br>\r\n            Login to redeem your Free DAOCode NFT\r\n          </div>\r\n          <div className='parent'>\r\n            <div className='whitelist-area' >\r\n            <div className=\"users\">\r\n              {addresses.map((user) => (\r\n                <div className=\"user\" key={user.id}>{user.address}</div>\r\n              ))}\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </FullPage>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\r\nimport Main from \"./pages/main.js\"\r\nimport Login from \"./pages/login.js\"\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  \r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login />}></Route>\r\n        <Route path=\"/main\" element={<Main />}></Route>\r\n      </Routes>\r\n    </Router>  \r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}